@namespace draw url(urn:oasis:names:tc:opendocument:xmlns:drawing:1.0);
@namespace fo url(urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0);
@namespace office url(urn:oasis:names:tc:opendocument:xmlns:office:1.0);
@namespace presentation url(urn:oasis:names:tc:opendocument:xmlns:presentation:1.0);
@namespace style url(urn:oasis:names:tc:opendocument:xmlns:style:1.0);
@namespace svg url(urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0);
@namespace table url(urn:oasis:names:tc:opendocument:xmlns:table:1.0);
@namespace text url(urn:oasis:names:tc:opendocument:xmlns:text:1.0);
@namespace webodfhelper url(urn:webodf:names:helper);
@namespace cursor url(urn:webodf:names:cursor);
@namespace editinfo url(urn:webodf:names:editinfo);
@namespace annotation url(urn:webodf:names:annotation);
@namespace dc url(http://purl.org/dc/elements/1.1/);
@namespace svgns url(http://www.w3.org/2000/svg);

office|document > *, office|document-content > * {
  display: none;
}
office|body, office|document {
  display: inline-block;
  position: relative;
}

text|p, text|h {
  display: block;
  padding: 0;
  margin: 0;
  line-height: normal;
  position: relative;
  min-height: 1.3em; /* prevent empty paragraphs and headings from collapsing if they are empty */
}
*[webodfhelper|containsparagraphanchor] {
  position: relative;
}
text|s {
    white-space: pre;
}
text|tab {
  display: inline;
  white-space: pre;
}
text|tracked-changes {
  /*Consumers that do not support change tracking, should ignore changes.*/
  display: none;
}
office|binary-data {
  display: none;
}
office|text {
  display: block;
  text-align: left;
  overflow: visible;
  word-wrap: break-word;
}

office|text::selection {
  /** Let's not draw selection highlight that overflows into the office|text
   * node when selecting content across several paragraphs
   */
  background: transparent;
}

office|document *::selection {
  background: transparent;
}
office|document *::-moz-selection {
  background: transparent;
}

office|text * draw|text-box {
/** only for text documents */
    display: block;
    border: 1px solid #d3d3d3;
}
office|spreadsheet {
  display: block;
  border-collapse: collapse;
  empty-cells: show;
  font-family: sans-serif;
  font-size: 10pt;
  text-align: left;
  page-break-inside: avoid;
  overflow: hidden;
}
office|presentation {
  display: inline-block;
  text-align: left;
}
#shadowContent {
  display: inline-block;
  text-align: left;
}
draw|page {
  display: block;
  position: relative;
  overflow: hidden;
}
presentation|notes, presentation|footer-decl, presentation|date-time-decl {
    display: none;
}
@media print {
  draw|page {
    border: 1pt solid black;
    page-break-inside: avoid;
  }
  presentation|notes {
    /*TODO*/
  }
}
office|spreadsheet text|p {
  border: 0px;
  padding: 1px;
  margin: 0px;
}
office|spreadsheet table|table {
  margin: 3px;
}
office|spreadsheet table|table:after {
  /* show sheet name the end of the sheet */
  /*content: attr(table|name);*/ /* gives parsing error in opera */
}
office|spreadsheet table|table-row {
  counter-increment: row;
}
office|spreadsheet table|table-row:before {
  width: 3em;
  background: #cccccc;
  border: 1px solid black;
  text-align: center;
  content: counter(row);
  display: table-cell;
}
office|spreadsheet table|table-cell {
  border: 1px solid #cccccc;
}
table|table {
  display: table;
}
draw|frame table|table {
  width: 100%;
  height: 100%;
  background: white;
}
table|table-header-rows {
  display: table-header-group;
}
table|table-row {
  display: table-row;
}
table|table-column {
  display: table-column;
}
table|table-cell {
  width: 0.889in;
  display: table-cell;
  word-break: break-all; /* prevent long words from extending out the table cell */
}
draw|frame {
  display: block;
}
draw|image {
  display: block;
  width: 100%;
  height: 100%;
  top: 0px;
  left: 0px;
  background-repeat: no-repeat;
  background-size: 100% 100%;
  -moz-background-size: 100% 100%;
}
/* only show the first image in frame */
draw|frame > draw|image:nth-of-type(n+2) {
  display: none;
}
text|list:before {
    display: none;
    content:"";
}
text|list {
    counter-reset: list;
}
text|list-item {
    display: block;
}
text|number {
    display:none;
}

text|a {
    color: blue;
    text-decoration: underline;
    cursor: pointer;
}
office|text[webodfhelper|links="inactive"] text|a {
    cursor: text;
}
text|note-citation {
    vertical-align: super;
    font-size: smaller;
}
text|note-body {
    display: none;
}
text|note:hover text|note-citation {
    background: #dddddd;
}
text|note:hover text|note-body {
    display: block;
    left:1em;
    max-width: 80%;
    position: absolute;
    background: #ffffaa;
}
svg|title, svg|desc {
    display: none;
}
video {
    width: 100%;
    height: 100%
}

/* below set up the cursor */
cursor|cursor {
    display: inline;
    width: 0;
    height: 1em;
    /* making the position relative enables the avatar to use
       the cursor as reference for its absolute position */
    position: relative;
    z-index: 1;
}

cursor|cursor > .caret {
    /* IMPORTANT: when changing these values ensure DEFAULT_CARET_TOP and DEFAULT_CARET_HEIGHT
        in Caret.js remain in sync */
    display: inline;
    position: absolute;
    top: 5%; /* push down the caret; 0px can do the job, 5% looks better, 10% is a bit over */
    height: 1em;
    border-left: 2px solid black;
    outline: none;
}

cursor|cursor > .handle {
    padding: 3px;
    box-shadow: 0px 0px 5px rgba(50, 50, 50, 0.75);
    border: none !important;
    border-radius: 5px;
    opacity: 0.3;
}

cursor|cursor > .handle > img {
    border-radius: 5px;
}

cursor|cursor > .handle.active {
    opacity: 0.8;
}

cursor|cursor > .handle:after {
    content: ' ';
    position: absolute;
    width: 0px;
    height: 0px;
    border-style: solid;
    border-width: 8.7px 5px 0 5px;
    border-color: black transparent transparent transparent;

    top: 100%;
    left: 43%;
}

/** Input Method Editor input pane & behaviours */
/* not within a cursor */
#eventTrap {
    height: 1px;
    margin: auto 0;
    display: block;
    position: absolute;
    left: -10000px;
    width: 1px;
    outline: none;
}

/* within a cursor */
cursor|cursor > #eventTrap {
    display: inline-block;
    position: static;
    left: 0;
    margin-right: -1px; /* Hide the content editable's own caret */
    color: rgba(255, 255, 255, 0); /** additionally hide the blinking caret by setting the colour to fully transparent */
    overflow: hidden; /* The overflow visibility is used to hide and show characters being entered */
    height: 1px;
    width: 1px; /* marginRight + width must equal 0 so chrome & FF don't think the element takes up space */
}

cursor|cursor[cursor|composing="true"] > #eventTrap {
    color: inherit; /* make colour non-transparent again to show the entered text */
    overflow: visible; /* The overflow visibility is used to hide and show characters being entered */
    height: auto;
    width: auto;
}

cursor|cursor[cursor|composing="true"] {
    display: inline-block;
    width: auto;
    height: inherit;
}

cursor|cursor[cursor|composing="true"] > .caret {
    /* during composition, the caret should be pushed along by the composition text, inline with the text */
    position: static;
    /* as it is now part of an inline-block, it will no longer need correct to top or height values to align properly */
    height: auto !important;
    top: auto !important;
}

.editInfoMarker {
    position: absolute;
    width: 10px;
    height: 100%;
    left: -20px;
    opacity: 0.8;
    top: 0;
    border-radius: 5px;
    background-color: transparent;
    box-shadow: 0px 0px 5px rgba(50, 50, 50, 0.75);
}
.editInfoMarker:hover {
    box-shadow: 0px 0px 8px rgba(0, 0, 0, 1);
}

.editInfoHandle {
    position: absolute;
    background-color: black;
    padding: 5px;
    border-radius: 5px;
    opacity: 0.8;
    box-shadow: 0px 0px 5px rgba(50, 50, 50, 0.75);
    bottom: 100%;
    margin-bottom: 10px;
    z-index: 3;
    left: -25px;
}
.editInfoHandle:after {
    content: ' ';
    position: absolute;
    width: 0px;
    height: 0px;
    border-style: solid;
    border-width: 8.7px 5px 0 5px;
    border-color: black transparent transparent transparent;

    top: 100%;
    left: 5px;
}
.editInfo {
    font-family: sans-serif;
    font-weight: normal;
    font-style: normal;
    text-decoration: none;
    color: white;
    width: 100%;
    height: 12pt;
}
.editInfoColor {
    float: left;
    width: 10pt;
    height: 10pt;
    border: 1px solid white;
}
.editInfoAuthor {
    float: left;
    margin-left: 5pt;
    font-size: 10pt;
    text-align: left;
    height: 12pt;
    line-height: 12pt;
}
.editInfoTime {
    float: right;
    margin-left: 30pt;
    font-size: 8pt;
    font-style: italic;
    color: yellow;
    height: 12pt;
    line-height: 12pt;
}

.annotationWrapper {
    display: inline;
    position: relative;
}

.annotationRemoveButton:before {
    content: 'Ã—';
    color: white;
    padding: 5px;
    line-height: 1em;
}

.annotationRemoveButton {
    width: 20px;
    height: 20px;
    border-radius: 10px;
    background-color: black;
    box-shadow: 0px 0px 5px rgba(50, 50, 50, 0.75);
    position: absolute;
    top: -10px;
    left: -10px;
    z-index: 3;
    text-align: center;
    font-family: sans-serif;
    font-style: normal;
    font-weight: normal;
    text-decoration: none;
    font-size: 15px;
}
.annotationRemoveButton:hover {
    cursor: pointer;
    box-shadow: 0px 0px 5px rgba(0, 0, 0, 1);
}

.annotationNote {
    width: 4cm;
    position: absolute;
    display: inline;
    z-index: 10;
}
.annotationNote > office|annotation {
    display: block;
    text-align: left;
}

.annotationConnector {
    position: absolute;
    display: inline;
    z-index: 2;
    border-top: 1px dashed brown;
}
.annotationConnector.angular {
    -moz-transform-origin: left top;
    -webkit-transform-origin: left top;
    -ms-transform-origin: left top;
    transform-origin: left top;
}
.annotationConnector.horizontal {
    left: 0;
}
.annotationConnector.horizontal:before {
    content: '';
    display: inline;
    position: absolute;
    width: 0px;
    height: 0px;
    border-style: solid;
    border-width: 8.7px 5px 0 5px;
    border-color: brown transparent transparent transparent;
    top: -1px;
    left: -5px;
}

office|annotation {
    width: 100%;
    height: 100%;
    display: none;
    background: rgb(198, 238, 184);
    background: -moz-linear-gradient(90deg, rgb(198, 238, 184) 30%, rgb(180, 196, 159) 100%);
    background: -webkit-linear-gradient(90deg, rgb(198, 238, 184) 30%, rgb(180, 196, 159) 100%);
    background: -o-linear-gradient(90deg, rgb(198, 238, 184) 30%, rgb(180, 196, 159) 100%);
    background: -ms-linear-gradient(90deg, rgb(198, 238, 184) 30%, rgb(180, 196, 159) 100%);
    background: linear-gradient(180deg, rgb(198, 238, 184) 30%, rgb(180, 196, 159) 100%);
    box-shadow: 0 3px 4px -3px #ccc;
}

office|annotation > dc|creator {
    display: block;
    font-size: 10pt;
    font-weight: normal;
    font-style: normal;
    font-family: sans-serif;
    color: white;
    background-color: brown;
    padding: 4px;
}
office|annotation > dc|date {
    display: block;
    font-size: 10pt;
    font-weight: normal;
    font-style: normal;
    font-family: sans-serif;
    border: 4px solid transparent;
}
office|annotation > text|list {
    display: block;
    padding: 5px;
}

/* This is very temporary CSS. This must go once
 * we start bundling webodf-default ODF styles for annotations.
 */
office|annotation text|p {
    font-size: 10pt;
    color: black;
    font-weight: normal;
    font-style: normal;
    text-decoration: none;
    font-family: sans-serif;
}

dc|*::selection {
    background: transparent;
}
dc|*::-moz-selection {
    background: transparent;
}

#annotationsPane {
    background-color: #EAEAEA;
    width: 4cm;
    height: 100%;
    display: none;
    position: absolute;
    outline: 1px solid #ccc;
}

.annotationHighlight {
    background-color: yellow;
    position: relative;
}

.selectionOverlay {
    position: absolute;
    pointer-events: none;
    top: 0;
    left: 0;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 15;
}
.selectionOverlay > polygon {
    fill-opacity: 0.3;
    stroke-opacity: 0.8;
    stroke-width: 1;
    fill-rule: evenodd;
}

#imageSelector {
    display: none;
    position: absolute;
    border-style: solid;
    border-color: black;
}

#imageSelector > div {
    width: 5px;
    height: 5px;
    display: block;
    position: absolute;
    border: 1px solid black;
    background-color: #ffffff;
}

#imageSelector > .topLeft {
    top: -4px;
    left: -4px;
}

#imageSelector > .topRight {
    top: -4px;
    right: -4px;
}

#imageSelector > .bottomRight {
    right: -4px;
    bottom: -4px;
}

#imageSelector > .bottomLeft {
    bottom: -4px;
    left: -4px;
}

#imageSelector > .topMiddle {
    top: -4px;
    left: 50%;
    margin-left: -2.5px; /* half of the width defined in #imageSelector > div */
}

#imageSelector > .rightMiddle {
    top: 50%;
    right: -4px;
    margin-top: -2.5px; /* half of the height defined in #imageSelector > div */
}

#imageSelector > .bottomMiddle {
    bottom: -4px;
    left: 50%;
    margin-left: -2.5px; /* half of the width defined in #imageSelector > div */
}

#imageSelector > .leftMiddle {
    top: 50%;
    left: -4px;
    margin-top: -2.5px; /* half of the height defined in #imageSelector > div */
}
